# SPDX-License-Identifier: GPL-3.0-only
# Original at https://github.com/tyron12233/CodeAssist/blob/main/.github/workflows/build-apk.yml
# Changes: Enhanced inputs for more control, minor adjustments.

name: 'Build Sketchware Pro teste'

on:
  push:
    paths:
      - '.github/workflows/android.yml'
      - 'app/**'
      - 'build-logic/**'
      - 'kotlinc/**'
      - 'gradle/**'
      - 'build.gradle'
      - 'gradle.properties'
      - 'gradlew'
      - 'gradlew.bat'
      - 'public-stable-ids.txt'
      - 'settings.gradle'
  pull_request:
    paths:
      - '.github/workflows/android.yml'
      - 'app/**'
      - 'build-logic/**'
      - 'kotlinc/**'
      - 'gradle/**'
      - 'build.gradle'
      - 'gradle.properties'
      - 'gradlew'
      - 'gradlew.bat'
      - 'public-stable-ids.txt'
      - 'settings.gradle'
  workflow_dispatch:
    inputs:
      runner_os:
        description: "Sistema Operacional do Runner:"
        required: true
        type: choice
        default: ubuntu-latest
        options:
          - ubuntu-latest
          - ubuntu-22.04
          - ubuntu-20.04
      build_target_api:
        description: 'API de destino para o build:'
        required: true
        type: choice
        default: 'minApi26'
        options:
          - all # Para construir ambas as variantes de API
          - minApi21
          - minApi26
      build_type:
        description: 'Tipo de build (Debug ou Release):'
        required: true
        type: choice
        default: 'Debug' # Capitalizado para corresponder às tasks Gradle comuns
        options:
          - Debug
          - Release
      upload_artifacts:
        description: 'Fazer upload dos APKs gerados como artefatos?'
        required: true
        type: boolean
        default: true
      custom_gradle_task:
        description: '(Opcional) Tarefa Gradle customizada para executar (ex: lintDebug, assemble, test). Se preenchido, ignora build_target_api e build_type para os jobs de build.'
        required: false
        type: string
        default: ''

jobs:
  clearWorkflow:
    name: Remover execuções falhas do workflow
    runs-on: ${{ github.event.inputs.runner_os || 'ubuntu-latest' }} # Fallback para push/pull_request
    if: github.event_name == 'workflow_dispatch' # Opcional: rodar apenas em dispatch manual
    steps:
      - uses: actions/checkout@v4.1.3 # Necessário para obter GITHUB_TOKEN com permissões certas se o job não tiver outra utilidade
        with:
          fetch-depth: 0 # Não estritamente necessário para este job, mas inofensivo

      - name: Deletar execuções falhas do workflow
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          WORKFLOW_ID=$(basename "${{ github.workflow_ref }}") # Obtém o nome do arquivo do workflow
          echo "Procurando execuções falhas para o workflow ID: $WORKFLOW_ID no repositório $REPO"

          FAILED_RUNS=$(curl -s -H "Authorization: token $GH_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/$REPO/actions/workflows/$WORKFLOW_ID/runs?status=failure" \
               | jq -r '.workflow_runs[] | .id')

          if [ -z "$FAILED_RUNS" ]; then
            echo "Nenhuma execução falha encontrada para este workflow."
          else
            echo "Execuções falhas encontradas:"
            echo "$FAILED_RUNS"
            echo "$FAILED_RUNS" | while read run_id; do
              echo "Deletando execução falha com ID: $run_id"
              curl -s -X DELETE -H "Authorization: token $GH_TOKEN" \
                   -H "Accept: application/vnd.github.v3+json" \
                   "https://api.github.com/repos/$REPO/actions/runs/$run_id"
            done
            echo "Processo de deleção de execuções falhas concluído."
          fi
        # Nota: A API pode ter rate limiting. Para muitos runs, considere usar GitHub CLI `gh` que pode ser mais robusto.

  buildMinApi26:
    # Executa se for dispatch e (build_target_api for minApi26 ou all E não houver custom_gradle_task)
    # OU se não for dispatch (push/pull_request)
    if: |
      (github.event_name == 'workflow_dispatch' &&
       (github.event.inputs.build_target_api == 'minApi26' || github.event.inputs.build_target_api == 'all') &&
       github.event.inputs.custom_gradle_task == '') ||
      (github.event_name != 'workflow_dispatch')
    name: Build minApi26 ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.build_type || 'Debug' }} APK
    runs-on: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.runner_os || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4.1.3
        with:
          fetch-depth: 0

      - name: Upgrading the Wrapper version
        run: |
          ./gradlew wrapper --gradle-version 8.0-rc-2 --distribution-type all

      - name: Verify the checksum of the Wrapper JAR
        run: |
          cd gradle/wrapper
          curl --location --output gradle-wrapper.jar.sha256 \
               https://services.gradle.org/distributions/gradle-8.0-rc-2-wrapper.jar.sha256
          echo "  gradle-wrapper.jar" >> gradle-wrapper.jar.sha256
          sha256sum --check gradle-wrapper.jar.sha256

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Build APK
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: |
          if: "assembleMinApi26${{ github.event_name }} == 'workflow_dispatch' && ${{github.event.inputs.build_type }} || 'Debug'"
        env:
          CRASH_REPORT_WEBHOOK_URL: ${{ secrets.CRASH_REPORT_WEBHOOK_URL }}

      - name: Upload APK
        if: (github.event_name == 'workflow_dispatch' && github.event.inputs.upload_artifacts) || (github.event_name != 'workflow_dispatch')
        uses: actions/upload-artifact@v4.3.3
        with:
          name: apk-minApi26-${{ github.event_name == 'workflow_dispatch' && toLower(github.event.inputs.build_type) || 'debug' }}
          path: app/build/outputs/apk/minApi26/${{ github.event_name == 'workflow_dispatch' && toLower(github.event.inputs.build_type) || 'debug' }}/*.apk

  buildMinApi21:
    if: |
      (github.event_name == 'workflow_dispatch' &&
       (github.event.inputs.build_target_api == 'minApi21' || github.event.inputs.build_target_api == 'all') &&
       github.event.inputs.custom_gradle_task == '') ||
      (github.event_name != 'workflow_dispatch')
    name: Build minApi21 ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.build_type || 'Debug' }} APK
    runs-on: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.runner_os || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4.1.3
        with:
          fetch-depth: 0

      - name: Upgrading the Wrapper version
        run: |
          ./gradlew wrapper --gradle-version 8.0-rc-2 --distribution-type all

      - name: Verify the checksum of the Wrapper JAR
        run: |
          cd gradle/wrapper
          curl --location --output gradle-wrapper.jar.sha256 \
               https://services.gradle.org/distributions/gradle-8.0-rc-2-wrapper.jar.sha256
          echo "  gradle-wrapper.jar" >> gradle-wrapper.jar.sha256
          sha256sum --check gradle-wrapper.jar.sha256

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Build APK
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: 'assembleMinApi21${{ github.event_name == 'workflow_dispatch' && github.event.inputs.build_type || 'Debug' }}'
        env:
          CRASH_REPORT_WEBHOOK_URL: ${{ secrets.CRASH_REPORT_WEBHOOK_URL }}

      - name: Upload APK
        if: (github.event_name == 'workflow_dispatch' && github.event.inputs.upload_artifacts) || (github.event_name != 'workflow_dispatch')
        uses: actions/upload-artifact@v4.3.3
        with:
          name: apk-minApi21-${{ github.event_name == 'workflow_dispatch' && toLower(github.event.inputs.build_type) || 'debug' }}
          path: app/build/outputs/apk/minApi21/${{ github.event_name == 'workflow_dispatch' && toLower(github.event.inputs.build_type) || 'debug' }}/*.apk

  run_custom_task:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.custom_gradle_task != ''
    name: Executar Tarefa Customizada - ${{ github.event.inputs.custom_gradle_task }}
    runs-on: ${{ github.event.inputs.runner_os }}
    steps:
      - uses: actions/checkout@v4.1.3
        with:
          fetch-depth: 0

      - name: Upgrading the Wrapper version (if needed by custom task)
        run: |
          ./gradlew wrapper --gradle-version 8.0-rc-2 --distribution-type all

      - name: Verify the checksum of the Wrapper JAR (if needed by custom task)
        run: |
          cd gradle/wrapper
          curl --location --output gradle-wrapper.jar.sha256 \
               https://services.gradle.org/distributions/gradle-8.0-rc-2-wrapper.jar.sha256
          echo "  gradle-wrapper.jar" >> gradle-wrapper.jar.sha256
          sha256sum --check gradle-wrapper.jar.sha256

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Run Custom Gradle Task
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: ${{ github.event.inputs.custom_gradle_task }}
        env:
          CRASH_REPORT_WEBHOOK_URL: ${{ secrets.CRASH_REPORT_WEBHOOK_URL }} # Incluído por consistência

      # Adicione um passo de upload de artefatos aqui se a tarefa customizada gerar saídas específicas
      # Exemplo:
      # - name: Upload Custom Artifacts
      #   if: github.event.inputs.upload_artifacts # Reutiliza o input de upload
      #   uses: actions/upload-artifact@v4.3.3
      #   with:
      #     name: custom-task-output-${{ github.event.inputs.custom_gradle_task }}
      #     path: |
      #       path/to/custom/output1
      #       path/to/custom/output2/*.zip
